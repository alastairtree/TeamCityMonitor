@using BuildMonitor.Models
@model IEnumerable<BuildMonitor.Models.ProjectModel>
    @{
        ViewBag.Title = "Build Monitor";
    }
    <script type="text/javascript">
        var projectsViewModel;

        $(document).ready(function () {

            function projectModel() {
                this.ProjectName = ko.observable();
                this.ProjectId = ko.observable();
                this.BuildConfigName = ko.observable();
                this.LastBuildTime = ko.observable();
                this.LastBuildStatus = ko.observable();
                this.LastBuildStatusText = ko.observable();
                this.Url = ko.observable();
                this.StatusClass = ko.dependentObservable(function () {

                    return "projectItem ".concat(String(this.LastBuildStatus()).toLowerCase()).toString();
                }.bind(this)
                );


            };

            var fetch = function (url) {
                $.ajax({
                    url: url,
                    success: function (response) {
                        if (response.success) {

                            url = response.nextPage;

                            $.each(response.results, function (x, project) {
                                projectsViewModel.projects.push(new projectModel()
                                                            .ProjectName(project.ProjectName)
                                                            .ProjectId(project.ProjectId)
                                                            .BuildConfigName(project.BuildConfigName)
                                                            .LastBuildTime(project.LastBuildTime)
                                                            .LastBuildStatus(project.LastBuildStatus)
                                                            .Url(project.Url)
                                                            .LastBuildStatusText(project.LastBuildStatusText)
                                                              );

                            });

                            if (response.nextPage.length)
                                fetch(response.nextPage);
                            else {
                                $("#lastRefresh").text("Last Refresh : " + GetDateTime());
                                $("#fetchfailed").hide("slow");
                                $("#loading").remove();
                            }

                        } else {
                            ShowError(response.message);
                        }
                    },
                    error: function (response) {

                        ShowError("");
                    }
                });
            }

            projectsViewModel = {
                projects: ko.observableArray([]),
                fetchPage: fetch,
                loadProjects: function () {
                    var url = '@Url.Action("GetProjects")?page=1&items=10';

                    projectsViewModel.projects.removeAll();

                    fetch(url);
                },
            };

            ko.applyBindings(projectsViewModel);

            projectsViewModel.loadProjects();

            window.setInterval(function () {
                projectsViewModel.loadProjects();
            }, 120000);

        });

        function GetDateTime() {
            var currentTime = new Date()
            var month = currentTime.getMonth() + 1
            var day = currentTime.getDate()
            var year = currentTime.getFullYear()
            var hours = currentTime.getHours()
            var minutes = currentTime.getMinutes()
            if (minutes < 10) {
                minutes = "0" + minutes
            }
            return new String().concat(day, "/", month, "/", year, " ", hours, ":", minutes);
        }

        function ShowError(errorMessage) {

            $("#loading").remove();
            $("#fetchfailed").text("WARNING: Failed to retrieve projects ... " + errorMessage);
            $("#fetchfailed").show("slow");
        }

    </script>

    <p>
        <strong id="lastRefresh">
        </strong>
    </p>
    <div id="fetchfailed" class="warning">
    </div>
    <div id="loading" class="loading">
        <img src="../../Content/ajax-loader.gif" alt="Loading..." />
    </div>
    <div class="projectContainer" data-bind="foreach: projects">

        <div data-bind="attr: { 'class': StatusClass }">
            <a href="" data-bind="attr: { 'href': Url }" target="_Blank">
                <h2 class="projectItemTitle" data-bind="text: ProjectName"></h2>
                <h4 data-bind="text: BuildConfigName"></h4>
            </a>
            <p>
                Last build Time:<br />
                <span data-bind="text: LastBuildTime"></span>
            </p>

        </div>
    </div>
